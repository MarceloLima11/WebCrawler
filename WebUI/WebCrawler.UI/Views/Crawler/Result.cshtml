@model WebCrawler.UI.Models.DetailsViewModel

<!DOCTYPE html>
<head>
    <link rel="stylesheet" href="~/css/result.css" />
</head>
<div class="result">
    <h1><span>Web</span> Crawling</h1>

    <div class="content">
        <div class="content_logo">
            <img src="~/images/webcrawler_logo.png" />
        </div>
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.CrawlingId)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.CrawlingId)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Succeded)
            </dt>
            <dd class="col-sm-10" style="background-color: @(Model.Succeded ? "green" : "red")">
                @if (Model.Succeded)
                {
                    <span style="color:white; font-weight:500;" class="badge badge-success">Success</span>
                }
                else
                {
                    <span style="color:white; font-weight:500;" class="badge badge-danger">Fail</span>
                }

            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.LinksFound)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.LinksFound)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Duration)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.FormattedDuration)
            </dd>
            <dt class="col-sm-2">
                Get Links
            </dt>
            <dd class="col-sm-10">
                <form method="post" action="@Url.Action("GenerateDocument", "Crawler")">
                    @for (int i = 0; i < Math.Max(Model.Links.Count, Model.Errors.Count); i++)
                    {
                        if (i < Model.Links.Count)
                        {
                            <input type="hidden" name="links[@i]" value="@Model.Links.ToList()[i]" />
                        }
                        if (i < Model.Errors.Count)
                        {
                            <input type="hidden" name="errors[@i]" value="@Model.Errors[i]" />
                        }
                    }
                    <button type="submit" class="btn btn-primary">
                        <img src="~/images/download.svg" /> Download
                    </button>
                </form>
            </dd>
        </dl>
    </div>
</div>
